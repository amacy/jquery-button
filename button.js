// Generated by CoffeeScript 1.3.3
(function() {

  jQuery(function() {
    var background, bottom, bottomLeft, bottomRight, button, centerX, centerY, lastX, lastY, left, move, right, startAll, top, topLeft, topRight, viewportHeight, viewportWidth;
    background = $("#container");
    button = $(".button");
    topLeft = $("#topLeft");
    top = $("#top");
    topRight = $("#topRight");
    right = $("#right");
    bottomRight = $("#bottomRight");
    bottom = $("#bottom");
    bottomLeft = $("#bottomLeft");
    left = $("#left");
    viewportWidth = $(window).width();
    viewportHeight = $(window).height();
    background.css({
      "width": viewportWidth,
      "height": viewportHeight
    });
    $(window).resize(function() {
      viewportWidth = $(window).width();
      viewportHeight = $(window).height();
      background.css({
        "width": viewportWidth,
        "height": viewportHeight
      });
    });
    background.mouseleave(function() {
      return startAll();
    });
    centerX = viewportWidth / 2;
    centerY = viewportHeight / 2;
    move = function(divName, x, y) {
      divName.offset({
        top: y - 27,
        left: x - 77
      });
    };
    startAll = function() {
      move(button, centerX, centerY);
      move(topLeft, centerX - parseInt(viewportWidth), centerY - parseInt(viewportHeight));
      move(top, centerX, centerY - parseInt(viewportHeight));
      move(topRight, centerX + parseInt(viewportWidth), centerY - parseInt(viewportHeight));
      move(right, centerX + parseInt(viewportWidth), centerY);
      move(bottomRight, centerX + parseInt(viewportWidth), centerY + parseInt(viewportHeight));
      move(bottom, centerX, centerY + parseInt(viewportHeight));
      move(bottomLeft, centerX - parseInt(viewportWidth), centerY + parseInt(viewportHeight));
      move(left, centerX - parseInt(viewportWidth), centerY);
    };
    startAll();
    lastX = null;
    lastY = null;
    return background.mousemove(function(e) {
      var buttonNextX, buttonNextY, buttonRate, buttonX, buttonY, calcX, calcY, distanceX, distanceY, edgeBottom, edgeLeft, edgeRight, edgeTop, mouseX, mouseY, moveAll, speed;
      mouseX = e.pageX;
      mouseY = e.pageY;
      buttonX = button.offset().left + 77;
      buttonY = button.offset().top + 27;
      distanceX = Math.abs(buttonX - mouseX);
      distanceY = Math.abs(buttonY - mouseY);
      speed = function(distX, distY) {
        if (distX >= 250 || distY >= 250) {
          return 5;
        } else if (distX >= 125 || distY >= 125) {
          return 10;
        } else {
          return 50;
        }
      };
      buttonRate = speed(distanceX, distanceY);
      calcX = function(x, rate) {
        var nextX;
        nextX = null;
        if (lastX > mouseX && mouseX > buttonX) {
          nextX = x - rate;
        } else if (lastX < mouseX && mouseX < buttonX) {
          nextX = x + rate;
        } else {
          nextX = x;
        }
        return nextX;
      };
      calcY = function(y, rate) {
        var nextY;
        nextY = null;
        if (lastY > mouseY && mouseY > buttonY) {
          nextY = y - rate;
        } else if (lastY < mouseY && mouseY < buttonY) {
          nextY = y + rate;
        } else {
          nextY = y;
        }
        return nextY;
      };
      buttonNextX = calcX(buttonX, buttonRate);
      buttonNextY = calcY(buttonY, buttonRate);
      moveAll = function() {
        move(button, buttonNextX, buttonNextY);
        move(topLeft, buttonNextX - parseInt(viewportWidth), buttonNextY - parseInt(viewportHeight));
        move(top, buttonNextX, buttonNextY - parseInt(viewportHeight));
        move(topRight, buttonNextX + parseInt(viewportWidth), buttonNextY - parseInt(viewportHeight));
        move(right, buttonNextX + parseInt(viewportWidth), buttonNextY);
        move(bottomRight, buttonNextX + parseInt(viewportWidth), buttonNextY + parseInt(viewportHeight));
        move(bottom, buttonNextX, buttonNextY + parseInt(viewportHeight));
        move(bottomLeft, buttonNextX - parseInt(viewportWidth), buttonNextY + parseInt(viewportHeight));
        move(left, buttonNextX - parseInt(viewportWidth), buttonNextY);
      };
      edgeTop = buttonNextY - 27;
      edgeRight = buttonNextX + 77;
      edgeBottom = buttonNextY + 27;
      edgeLeft = buttonNextX - 77;
      if (edgeBottom < 0) {
        buttonNextY += parseInt(viewportHeight);
        moveAll();
      } else if (edgeLeft > parseInt(viewportWidth)) {
        buttonNextX -= parseInt(viewportWidth);
        moveAll();
      } else if (edgeTop > parseInt(viewportHeight)) {
        buttonNextY -= parseInt(viewportHeight);
        moveAll();
      } else if (edgeRight < 0) {
        buttonNextX += parseInt(viewportWidth);
        moveAll();
      } else {
        moveAll();
      }
      lastX = mouseX;
      lastY = mouseY;
    });
  });

}).call(this);
